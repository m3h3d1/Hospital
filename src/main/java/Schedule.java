
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Mehedi Hasan
 */
public class Schedule extends javax.swing.JFrame {

    /**
     * Creates new form Schedule
     */
    public Schedule() {
        initComponents();

        fillClassJtable(table);
        table.setRowHeight(40);
        table.setShowGrid(true);
    }

    public void fillClassJtable(JTable table) {

        Connection con = AllConnection.getConnection();
        PreparedStatement ps;
        try {
            SimpleDateFormat dateForm = new SimpleDateFormat("yyyy-MM-dd");
            String strDate = dateForm.format(DateSearch.getDate());
         if(strDate!=null) {
//            String strDate = dateForm.format(DateSearch);
//            System.out.println(strDate);
            
            ps = con.prepareStatement("SELECT doctor_info.DoctorID, doctor_info.Name FROM `doctor_info` INNER JOIN Schedule_info ON doctor_info.DoctorID=schedule_info.DoctorID WHERE schedule_info.Date = ?");
            ps.setString(1, strDate);
            ResultSet rs = ps.executeQuery();
            DefaultTableModel model = (DefaultTableModel) table.getModel();

            Object[] row;
            while (rs.next()) {

                row = new Object[2];

                row[0] = rs.getInt(1);
                row[1] = rs.getString(2);
                
                model.addRow(row);
            }
          }
        } catch (Exception ex) {
//            JOptionPane.showMessageDialog(null, "problem happening");
//            JOptionPane.showMessageDialog(null, ex);
//            System.out.println(ex);
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnAdd = new javax.swing.JButton();
        RadioButtonYes = new javax.swing.JRadioButton();
        jLabel5 = new javax.swing.JLabel();
        RadioButtonNo = new javax.swing.JRadioButton();
        DateChooser = new com.toedter.calendar.JDateChooser();
        jLabel6 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtDoctorID = new javax.swing.JTextField();
        btnHome = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        DateSearch = new com.toedter.calendar.JDateChooser();
        btnSearch = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });
        getContentPane().add(btnAdd, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 470, 143, 47));

        RadioButtonYes.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        RadioButtonYes.setText("Yes");
        RadioButtonYes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RadioButtonYesActionPerformed(evt);
            }
        });
        getContentPane().add(RadioButtonYes, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 297, 111, -1));

        jLabel5.setText("Availability");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(124, 307, 145, 29));

        RadioButtonNo.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        RadioButtonNo.setText("No");
        RadioButtonNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RadioButtonNoActionPerformed(evt);
            }
        });
        getContentPane().add(RadioButtonNo, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 297, 119, -1));
        getContentPane().add(DateChooser, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 228, 259, 31));

        jLabel6.setText("Date");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(124, 228, 187, 31));

        jLabel2.setText("Doctor ID");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(124, 156, 187, 31));

        txtDoctorID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDoctorIDActionPerformed(evt);
            }
        });
        getContentPane().add(txtDoctorID, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 156, 259, 31));

        btnHome.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        btnHome.setText("Home");
        btnHome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHomeActionPerformed(evt);
            }
        });
        getContentPane().add(btnHome, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 470, -1, 47));

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(51, 51, 255));
        jLabel10.setText("Schedule Info");
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 20, -1, -1));

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Doctor ID", "Doctor Name"
            }
        ));
        jScrollPane1.setViewportView(table);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 140, 520, -1));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(153, 0, 0));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Available Doctor's List");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 70, 190, 30));
        getContentPane().add(DateSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 80, 248, 40));

        btnSearch.setText("Search");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });
        getContentPane().add(btnSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(1090, 90, -1, -1));

        jLabel3.setText("Choose a Date:");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 100, 110, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public boolean verifyText() {
//        if (txtRoom.getText().equals("") || txtType.getText().equals("") ||
//                DateChooser.getDate() == null || txtCost.getText().equals("") ) { //
//            JOptionPane.showMessageDialog(null, "one or more empty field");
//            return false;
//        } /// choose a date higher than the current date
//        else if (DateChooser.getDate().compareTo(new Date()) > 0) {
//            JOptionPane.showMessageDialog(null, "invalid date");
//            return false;
//        } else {
            return true;
//        }
    }
    
    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        try {
            int DoctorID = Integer.valueOf(txtDoctorID.getText());
            String Available = "YES";
            if (RadioButtonNo.isSelected()) {
                Available = "NO";
            }

            SimpleDateFormat dateForm = new SimpleDateFormat("yyyy-MM-dd");
            String Date = dateForm.format(DateChooser.getDate());

            if(verifyText()) {
                Connection con = AllConnection.getConnection();
                PreparedStatement ps;

                try {
                    ps = con.prepareStatement("INSERT INTO `schedule_info`(`DoctorID`, `Date`, `Availability`) "
                        + "VALUES (?,?,?)");

                    ps.setInt(1, DoctorID);
                    ps.setString(2, Date);
                    ps.setString(3, Available);

                    if (ps.executeUpdate() > 0) {
                        JOptionPane.showMessageDialog(null, "New Schedule data added");
                    } else {
                        JOptionPane.showMessageDialog(null, "New Schedule data not added");
                    }
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(null, ex);
                }
            }

        }
        catch (Exception e){
            JOptionPane.showMessageDialog(null, "Error in save");
        }
    }//GEN-LAST:event_btnAddActionPerformed

    private void RadioButtonYesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RadioButtonYesActionPerformed
        RadioButtonNo.setSelected(false);
    }//GEN-LAST:event_RadioButtonYesActionPerformed

    private void RadioButtonNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RadioButtonNoActionPerformed
        RadioButtonYes.setSelected(false);
    }//GEN-LAST:event_RadioButtonNoActionPerformed

    private void txtDoctorIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDoctorIDActionPerformed

    }//GEN-LAST:event_txtDoctorIDActionPerformed

    private void btnHomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHomeActionPerformed
        MainMenu form=new MainMenu();
        form.setVisible(true);
        dispose();
        form.setResizable(false);
    }//GEN-LAST:event_btnHomeActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        DefaultTableModel model = (DefaultTableModel) table.getModel();
        model.setRowCount(0);
        fillClassJtable(table);
    }//GEN-LAST:event_btnSearchActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Schedule.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Schedule.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Schedule.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Schedule.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Schedule().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JDateChooser DateChooser;
    private com.toedter.calendar.JDateChooser DateSearch;
    private javax.swing.JRadioButton RadioButtonNo;
    private javax.swing.JRadioButton RadioButtonYes;
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnHome;
    private javax.swing.JButton btnSearch;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable table;
    private javax.swing.JTextField txtDoctorID;
    // End of variables declaration//GEN-END:variables
}
