
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Mehedi Hasan
 */
public class room extends javax.swing.JFrame {

    /**
     * Creates new form room
     */
//    DefaultTableModel model;
    public room() {
        initComponents();
        fillClassJtable(table);
        table.setRowHeight(40);
        table.setShowGrid(true);
    }
    
    public void refreshJtable() {
        DefaultTableModel model = (DefaultTableModel) table.getModel();
        model.setRowCount(0);
        fillClassJtable(table);
    }
    
    public void fillClassJtable(JTable table) {
        Connection con = AllConnection.getConnection();
        PreparedStatement ps;
        
        try {
            ps = con.prepareStatement("SELECT * FROM `room`");
            ResultSet rs = ps.executeQuery();
            DefaultTableModel model = (DefaultTableModel) table.getModel();

            Object[] row;
            while (rs.next()) {

                row = new Object[5];

                row[0] = rs.getInt(1);
                row[1] = rs.getString(2);
                row[2] = rs.getInt(3);
                row[3] = rs.getString(4);
                row[4] = rs.getString(5);

                model.addRow(row);
            }

        } 
        catch (SQLException ex) {
//            JOptionPane.showMessageDialog(null, "problem happening");
            JOptionPane.showMessageDialog(null, ex);
//            System.out.println(ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        buttonGroup4 = new javax.swing.ButtonGroup();
        buttonGroup5 = new javax.swing.ButtonGroup();
        buttonGroup6 = new javax.swing.ButtonGroup();
        buttonGroup7 = new javax.swing.ButtonGroup();
        buttonGroup8 = new javax.swing.ButtonGroup();
        buttonGroup9 = new javax.swing.ButtonGroup();
        txtRoom = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtType = new javax.swing.JTextField();
        txtCost = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        btnAdd = new javax.swing.JButton();
        DateChooser = new com.toedter.calendar.JDateChooser();
        RadioButtonYes = new javax.swing.JRadioButton();
        RadioButtonNo = new javax.swing.JRadioButton();
        jLabel5 = new javax.swing.JLabel();
        btnHome = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        btnUpdate = new javax.swing.JButton();
        btnRemove = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(1100, 600));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtRoom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtRoomActionPerformed(evt);
            }
        });
        getContentPane().add(txtRoom, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 130, 248, 31));

        jLabel2.setText("Room No");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(79, 133, 100, 31));

        jLabel3.setText("Room Type");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(79, 182, 100, 29));

        txtType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTypeActionPerformed(evt);
            }
        });
        getContentPane().add(txtType, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 180, 248, 29));

        txtCost.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCostActionPerformed(evt);
            }
        });
        getContentPane().add(txtCost, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 220, 248, 29));

        jLabel4.setText("Cost");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(79, 221, 110, 33));

        jLabel6.setText("Date");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 260, 100, 31));

        btnAdd.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnAdd.setText("Add New Data");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });
        getContentPane().add(btnAdd, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 490, 120, 50));
        getContentPane().add(DateChooser, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 260, 248, 31));

        RadioButtonYes.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        RadioButtonYes.setText("Yes");
        RadioButtonYes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RadioButtonYesActionPerformed(evt);
            }
        });
        getContentPane().add(RadioButtonYes, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 340, 111, -1));

        RadioButtonNo.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        RadioButtonNo.setText("No");
        RadioButtonNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RadioButtonNoActionPerformed(evt);
            }
        });
        getContentPane().add(RadioButtonNo, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 340, 119, -1));

        jLabel5.setText("Availability");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 350, 110, 29));

        btnHome.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnHome.setText("Home");
        btnHome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHomeActionPerformed(evt);
            }
        });
        getContentPane().add(btnHome, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 490, -1, 47));

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(51, 51, 255));
        jLabel10.setText("Room");
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 30, -1, -1));

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Room No", "Type", "Cost", "Date", "Availability"
            }
        ));
        table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(table);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 100, -1, -1));

        btnUpdate.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnUpdate.setText("Update Existing Data");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });
        getContentPane().add(btnUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 490, 160, 50));

        btnRemove.setText("Remove Selected Data");
        btnRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveActionPerformed(evt);
            }
        });
        getContentPane().add(btnRemove, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 490, 160, 50));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtRoomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtRoomActionPerformed

    }//GEN-LAST:event_txtRoomActionPerformed

    public boolean verifyText() {
        if (txtRoom.getText().equals("") || txtType.getText().equals("") ||
                DateChooser.getDate() == null || txtCost.getText().equals("") ) { //
            JOptionPane.showMessageDialog(null, "one or more empty field");
            return false;
        } /// choose a date higher than the current date
        else if (DateChooser.getDate().compareTo(new Date()) > 0) {
            JOptionPane.showMessageDialog(null, "invalid date");
            return false;
        } else {
            return true;
        }
    }
    
    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        try {
            int RoomID = Integer.valueOf(txtRoom.getText());
            String RoomType = txtType.getText();
            int Cost = Integer.valueOf(txtCost.getText());
            String Available = "YES";
            if (RadioButtonNo.isSelected()) {
                Available = "NO";
            }
            
            SimpleDateFormat dateForm = new SimpleDateFormat("yyyy-MM-dd");
            String Date = dateForm.format(DateChooser.getDate());

            if(verifyText()) {
                Connection con = AllConnection.getConnection();
                PreparedStatement ps;

                try {
                    ps = con.prepareStatement("INSERT INTO `room`(`RoomNo`, `Type`, `Cost`, `Date`, `Availability`) "
                        + "VALUES (?,?,?,?,?)");

                    ps.setInt(1, RoomID);
                    ps.setString(2, RoomType);
                    ps.setInt(3, Cost);
                    ps.setString(4, Date);
                    ps.setString(5, Available);

                    if (ps.executeUpdate() > 0) {
                        JOptionPane.showMessageDialog(null, "New Room data added");
                    } else {
                        JOptionPane.showMessageDialog(null, "New Room data not added");
                    }
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(null, ex);
                }
            }
            refreshJtable();
        }
        catch (Exception e){
            JOptionPane.showMessageDialog(null, "Error in save");
        }
    }//GEN-LAST:event_btnAddActionPerformed

    private void RadioButtonYesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RadioButtonYesActionPerformed
        RadioButtonNo.setSelected(false);
    }//GEN-LAST:event_RadioButtonYesActionPerformed

    private void RadioButtonNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RadioButtonNoActionPerformed
        RadioButtonYes.setSelected(false);
    }//GEN-LAST:event_RadioButtonNoActionPerformed

    private void txtCostActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCostActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCostActionPerformed

    private void txtTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTypeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTypeActionPerformed

    private void btnHomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHomeActionPerformed
        MainMenu form=new MainMenu();
        form.setVisible(true);
        dispose();
        form.setResizable(false);
    }//GEN-LAST:event_btnHomeActionPerformed

    private void tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableMouseClicked
        DefaultTableModel model = (DefaultTableModel) table.getModel();
        int rowIndex = table.getSelectedRow();
        RadioButtonYes.setSelected(false);
        RadioButtonNo.setSelected(false);
        if (model.getValueAt(rowIndex, 4).toString().equals("YES")) {
            RadioButtonYes.setSelected(true);
        } else {
            RadioButtonNo.setSelected(true);
        }
        txtRoom.setText(model.getValueAt(rowIndex, 0).toString());
        txtType.setText(model.getValueAt(rowIndex, 1).toString());
        txtCost.setText(model.getValueAt(rowIndex, 2).toString());
        Date bdate;
        try {
            bdate = new SimpleDateFormat("yyyy-MM-dd").parse(model.getValueAt(rowIndex, 3).toString());
            DateChooser.setDate(bdate);
        } catch (ParseException ex) {
            JOptionPane.showMessageDialog(null, ex);
        }
    }//GEN-LAST:event_tableMouseClicked

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        try {
            int RoomID = Integer.valueOf(txtRoom.getText());
            String RoomType = txtType.getText();
            int Cost = Integer.valueOf(txtCost.getText());
            String Available = "YES";
            if (RadioButtonNo.isSelected()) {
                Available = "NO";
            }
            
            SimpleDateFormat dateForm = new SimpleDateFormat("yyyy-MM-dd");
            String Date = dateForm.format(DateChooser.getDate());

            if(verifyText()) {
                Connection con = AllConnection.getConnection();
                try {
                    PreparedStatement ps = con.prepareStatement("UPDATE `room` SET `Type`=?,`Cost`=?,`Date`=?,`Availability`=? WHERE `RoomNo`=?");
                        
                    ps.setInt(5, RoomID);
                    ps.setString(1, RoomType);
                    ps.setInt(2, Cost);
                    ps.setString(3, Date);
                    ps.setString(4, Available);

                    if (ps.executeUpdate() > 0) {
                        JOptionPane.showMessageDialog(null, "data updated");
                    } else {
                        JOptionPane.showMessageDialog(null, "data didn't update");
                    }
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(null, ex);
                }
            }
            
            
            refreshJtable();
        }
        catch (Exception e){
            JOptionPane.showMessageDialog(null, "Error in Update");
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveActionPerformed
        if (txtRoom.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "No data selected");
        } else {
            int room = Integer.parseInt(txtRoom.getText());
            int x = JOptionPane.showConfirmDialog(null, "Selected data will be deleted", "Delete informantion", JOptionPane.OK_CANCEL_OPTION, 0);
            if (x == JOptionPane.OK_OPTION) {
                try {
                    Connection con = AllConnection.getConnection();
                    PreparedStatement ps = con.prepareStatement("DELETE FROM `room` WHERE RoomNo = ?");
                    ps.setInt(1, room);

                    if (ps.executeUpdate() > 0) {
                        JOptionPane.showMessageDialog(null, "student information deleted");
                        txtRoom.setText("");
                        txtType.setText("");
                        txtCost.setText("");
                        DateChooser.setDate(null);
                        RadioButtonYes.setSelected(true);
                    } else {
                        JOptionPane.showMessageDialog(null, "student information not deleted");
                    }

                    refreshJtable();
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(null, ex);
                }
            }
        }
    }//GEN-LAST:event_btnRemoveActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(room.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(room.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(room.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(room.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new room().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JDateChooser DateChooser;
    private javax.swing.JRadioButton RadioButtonNo;
    private javax.swing.JRadioButton RadioButtonYes;
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnHome;
    private javax.swing.JButton btnRemove;
    private javax.swing.JButton btnUpdate;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.ButtonGroup buttonGroup4;
    private javax.swing.ButtonGroup buttonGroup5;
    private javax.swing.ButtonGroup buttonGroup6;
    private javax.swing.ButtonGroup buttonGroup7;
    private javax.swing.ButtonGroup buttonGroup8;
    private javax.swing.ButtonGroup buttonGroup9;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable table;
    private javax.swing.JTextField txtCost;
    private javax.swing.JTextField txtRoom;
    private javax.swing.JTextField txtType;
    // End of variables declaration//GEN-END:variables
}
